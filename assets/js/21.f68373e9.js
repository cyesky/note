(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{281:function(e,t,o){"use strict";o.r(t);var r=o(38),l=Object(r.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"export-default-和-export-的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#export-default-和-export-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" export default 和 export 的区别")]),e._v(" "),o("ol",[o("li",[e._v("export 与 export default 均可用于导出常量、函数、文件、模块等")]),e._v(" "),o("li",[e._v("你可以在其它文件或模块中通过 import+(常量 | 函数 | 文件 | 模块)名的方式，将其导入，以便能够对其进行使用")]),e._v(" "),o("li",[e._v("在一个文件或模块中，export、import 可以有多个，export default 仅有一个")]),e._v(" "),o("li",[e._v("通过 export 方式导出，在导入时要加{ }，export default 则不需要")])]),e._v(" "),o("h1",{attrs:{id:"module-exports-和-export-的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#module-exports-和-export-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" module.exports 和 export 的区别")]),e._v(" "),o("ol",[o("li",[e._v("每一个 node.js 执行文件，都自动创建一个 module 对象，同时，module 对象会创建一个叫 exports 的属性，初始化的值是 {}")]),e._v(" "),o("li",[e._v("exports 是 module.exports 的一个引用。")]),e._v(" "),o("li",[e._v("exports = module.exports = {};")])]),e._v(" "),o("ul",[o("li",[e._v("exports 是 module.exports 的一个引用")]),e._v(" "),o("li",[e._v("module.exports 初始值为一个空对象 {}，所以 exports 初始值也是 {}")]),e._v(" "),o("li",[e._v("require 引用模块后，返回的是 module.exports 而不是 exports!!!!!")]),e._v(" "),o("li",[e._v("exports.xxx 相当于在导出对象上挂属性，该属性对调用模块直接可见")]),e._v(" "),o("li",[e._v("exports = 相当于给 exports 对象重新赋值，调用模块不能访问 exports 对象及其属性")]),e._v(" "),o("li",[e._v("如果此模块是一个类，就应该直接赋值 module.exports，这样调用者就是一个类构造器，可以直接 new 实例")])])])},[],!1,null,null,null);t.default=l.exports}}]);